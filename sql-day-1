sql
===============


-- passwords
If you lose this password, please consult the section How to Reset the Root Password in the MySQL reference manual.

//help resetting password.. http://stackoverflow.com/questions/30692812/mysql-user-db-does-not-have-password-columns-installing-mysql-on-osx





  # cheatsheet

  CREATE DATABASE

  CREATE DATABASE dbName;

  CREATE TABLE (with auto numbering integer id)

  CREATE TABLE tableName (
   id serial PRIMARY KEY,
   name varchar(50) UNIQUE NOT NULL,
   dateCreated timestamp DEFAULT current_timestamp
  );

  Add a primary key

  ALTER TABLE tableName ADD PRIMARY KEY (id);

  Create an INDEX

  CREATE UNIQUE INDEX indexName ON tableName (columnNames);

  Backup a database (command line)

  pg_dump dbName > dbName.sql

  Backup all databases (command line)

  pg_dumpall > pgbackup.sql

  Run a SQL script (command line)

  psql -f script.sql databaseName

  Search using a regular expression

  SELECT column FROM table WHERE column ~ 'foo.*';

  The first N records

  SELECT columns FROM table LIMIT 10;

  Pagination

  SELECT cols FROM table LIMIT 10 OFFSET 30;

  Prepared Statements

  PREPARE preparedInsert (int, varchar) AS
  INSERT INTO tableName (intColumn, charColumn) VALUES ($1, $2);
  EXECUTE preparedInsert (1,'a');
  EXECUTE preparedInsert (2,'b');
  DEALLOCATE preparedInsert;

  Create a Function

  CREATE OR REPLACE FUNCTION month (timestamp) RETURNS integer
   AS 'SELECT date_part(''month'', $1)::integer;'
  LANGUAGE 'sql';

  Table Maintenance

  VACUUM ANALYZE table;

  Reindex a database, table or index

  REINDEX DATABASE dbName;

  Show query plan

  EXPLAIN SELECT * FROM table;

  Import from a file

  COPY destTable FROM '/tmp/somefile';

  Show all runtime parameters

  SHOW ALL;

  Grant all permissions to a user

  GRANT ALL PRIVILEGES ON table TO username;

  Perform a transaction

  BEGIN TRANSACTION
   UPDATE accounts SET balance += 50 WHERE id = 1;
  COMMIT;

  Basic SQL
  Get all columns and rows from a table

  SELECT * FROM table;

  Add a new row

  INSERT INTO table (column1,column2)
  VALUES (1, 'one');

  Update a row

  UPDATE table SET foo = 'bar' WHERE id = 1;

  Delete a row

  DELETE FROM table WHERE id = 1;




  #######################################################################





Aggregate functions
-----------

Select but without duplicates: `SELECT distinct name, email, acception FROM owners WHERE acception = 1 AND date >= 2015-01-01 00:00:00`

Calculate total number of records: `SELECT SUM([column]) FROM [table];`

Count total number of `[column]` and group by `[category-column]`: `SELECT [category-column], SUM([column]) FROM [table] GROUP BY [category-column];`

Get largest value in `[column]`: `SELECT MAX([column]) FROM [table];`

Get smallest value: `SELECT MIN([column]) FROM [table];`

Get average value: `SELECT AVG([column]) FROM [table];`

Get rounded average value and group by `[category-column]`: `SELECT [category-column], ROUND(AVG([column]), 2) FROM [table] GROUP BY [category-column];`





Multiple tables
-----------

Select from multiple tables: `SELECT [table1].[column], [table1].[another-column], [table2].[column] FROM [table1], [table2];`

Combine rows from different tables: `SELECT * FROM [table1] INNER JOIN [table2] ON [table1].[column] = [table2].[column];`

Combine rows from different tables but do not require the join condition: `SELECT * FROM [table1] LEFT OUTER JOIN [table2] ON [table1].[column] = [table2].[column];` (The left table is the first table that appears in the statement.)

Rename column or table using an _alias_: `SELECT [table1].[column] AS '[value]', [table2].[column] AS '[value]' FROM [table1], [table2];`





Users functions
-----------

List all users: `SELECT User,Host FROM mysql.user;`

Create new user: `CREATE USER 'username'@'localhost' IDENTIFIED BY 'password';`

Grant `ALL` access to user for `*` tables: `GRANT ALL ON database.* TO 'user'@'localhost';`


Find out the IP Address of the Mysql Host
-----------
`SHOW VARIABLES WHERE Variable_name = 'hostname';` ([source](http://serverfault.com/a/129646))























